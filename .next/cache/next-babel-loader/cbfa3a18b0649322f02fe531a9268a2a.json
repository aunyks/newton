{"ast":null,"code":"var metadelta = require('@metadelta/core');\n\nmodule.exports = {\n  simplify: metadelta.simplify,\n  factor: metadelta.factor,\n  zeroes: metadelta.zeroes,\n  integrate: metadelta.integrate,\n  derive: metadelta.derive,\n  cos: metadelta.cos,\n  sin: metadelta.sin,\n  tan: metadelta.tan,\n  arccos: metadelta.arccos,\n  arcsin: metadelta.arcsin,\n  arctan: metadelta.arcsin,\n  abs: metadelta.abs,\n  log: function (expression) {\n    var base = expression.split('|')[0];\n    var arg = expression.split('|')[1];\n    return metadelta.log(base, arg);\n  },\n  tangent: function (expression) {\n    var data = expression.split('|');\n    var at = parseInt(data[0]);\n    var f = data[1];\n    return metadelta.tangent(f, at);\n  },\n  area: function (expression) {\n    var split = expression.split('|');\n    var f = split[1];\n    var from = split[0].split(':')[0];\n    var to = split[0].split(':')[1];\n    return '' + metadelta.areaUnder(f, {\n      start: from,\n      finish: to\n    });\n  }\n};","map":{"version":3,"sources":["/Users/aunyks/dev/newton-api/lib/operations.js"],"names":["metadelta","require","module","exports","simplify","factor","zeroes","integrate","derive","cos","sin","tan","arccos","arcsin","arctan","abs","log","expression","base","split","arg","tangent","data","at","parseInt","f","area","from","to","areaUnder","start","finish"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAEJ,SAAS,CAACI,QADL;AAEfC,EAAAA,MAAM,EAAEL,SAAS,CAACK,MAFH;AAGfC,EAAAA,MAAM,EAAEN,SAAS,CAACM,MAHH;AAIfC,EAAAA,SAAS,EAAEP,SAAS,CAACO,SAJN;AAKfC,EAAAA,MAAM,EAAER,SAAS,CAACQ,MALH;AAMfC,EAAAA,GAAG,EAAET,SAAS,CAACS,GANA;AAOfC,EAAAA,GAAG,EAAEV,SAAS,CAACU,GAPA;AAQfC,EAAAA,GAAG,EAAEX,SAAS,CAACW,GARA;AASfC,EAAAA,MAAM,EAAEZ,SAAS,CAACY,MATH;AAUfC,EAAAA,MAAM,EAAEb,SAAS,CAACa,MAVH;AAWfC,EAAAA,MAAM,EAAEd,SAAS,CAACa,MAXH;AAYfE,EAAAA,GAAG,EAAEf,SAAS,CAACe,GAZA;AAafC,EAAAA,GAAG,EAAE,UAASC,UAAT,EAAoB;AACvB,QAAIC,IAAI,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAX;AACA,QAAIC,GAAG,GAAIH,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAX;AACA,WAAOnB,SAAS,CAACgB,GAAV,CAAcE,IAAd,EAAoBE,GAApB,CAAP;AACD,GAjBc;AAkBfC,EAAAA,OAAO,EAAE,UAASJ,UAAT,EAAoB;AAC3B,QAAIK,IAAI,GAAGL,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAX;AACA,QAAII,EAAE,GAAGC,QAAQ,CAACF,IAAI,CAAC,CAAD,CAAL,CAAjB;AACA,QAAIG,CAAC,GAAGH,IAAI,CAAC,CAAD,CAAZ;AACA,WAAOtB,SAAS,CAACqB,OAAV,CAAkBI,CAAlB,EAAqBF,EAArB,CAAP;AACD,GAvBc;AAwBfG,EAAAA,IAAI,EAAE,UAAST,UAAT,EAAoB;AACxB,QAAIE,KAAK,GAAGF,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAZ;AACA,QAAIM,CAAC,GAAGN,KAAK,CAAC,CAAD,CAAb;AACA,QAAIQ,IAAI,GAAGR,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,QAAIS,EAAE,GAAKT,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,WAAO,KAAKnB,SAAS,CAAC6B,SAAV,CAAoBJ,CAApB,EAAuB;AAAEK,MAAAA,KAAK,EAAEH,IAAT;AAAeI,MAAAA,MAAM,EAAEH;AAAvB,KAAvB,CAAZ;AACD;AA9Bc,CAAjB","sourcesContent":["var metadelta = require('@metadelta/core');\n\nmodule.exports = {\n  simplify: metadelta.simplify,\n  factor: metadelta.factor,\n  zeroes: metadelta.zeroes,\n  integrate: metadelta.integrate,\n  derive: metadelta.derive,\n  cos: metadelta.cos,\n  sin: metadelta.sin,\n  tan: metadelta.tan,\n  arccos: metadelta.arccos,\n  arcsin: metadelta.arcsin,\n  arctan: metadelta.arcsin,\n  abs: metadelta.abs,\n  log: function(expression){\n    var base = expression.split('|')[0];\n    var arg  = expression.split('|')[1];\n    return metadelta.log(base, arg);\n  },\n  tangent: function(expression){\n    var data = expression.split('|');\n    var at = parseInt(data[0]);\n    var f = data[1];\n    return metadelta.tangent(f, at);\n  },\n  area: function(expression){\n    var split = expression.split('|');\n    var f = split[1];\n    var from = split[0].split(':')[0];\n    var to   = split[0].split(':')[1];\n    return '' + metadelta.areaUnder(f, { start: from, finish: to });\n  }\n};\n"]},"metadata":{},"sourceType":"script"}